#!/bin/sh
#
# repmgrd     Start repmgrd daemon
#
# chkconfig: - 64 36
# description: repmgrd is a replication manager, and failover management tool for PostgreSQL

## BEGIN INIT INFO
# Provides: repmgrd
# Required-Start: $local_fs $remote_fs $network $syslog $named
# Required-Stop: $local_fs $remote_fs $network $syslog $named
# Should-Start: postgresql-9.4
# Short-Description: Start repmgrd daemon
# Description: repmgrd is replication manager, and failover management tool
### END INIT INFO

# Source function library.
. /etc/rc.d/init.d/functions

# Find the name of the script
NAME=$(basename $0)
[ ${NAME:0:1} = "S" -o ${NAME:0:1} = "K" ] &&  NAME=${NAME:3}

prog=repmgr-9.4
sysconfig="/etc/sysconfig/repmgr/${prog}"
REPMGRD_BIN=/usr/pgsql-9.4/bin/repmgrd
REPMGRD_CONF=/etc/repmgr/9.4/repmgr.conf
REPMGRD_ENABLED=no
REPMGRD_LOG=/var/log/repmgr/repmgrd-9.4.log
REPMGRD_OPTS=
REPMGRD_PIDFILE=/var/run/repmgr/repmgrd-9.4.pid
REPMGRD_USER=postgres
#
# Only execute as REPMGRD_USER
if [ "$(/usr/bin/whoami)" != "$REPMGRD_USER" ]; then
  su - $REPMGRD_USER -c "$0 $@"
  exit $?
fi
#
# Get network config.
. /etc/sysconfig/network

# Read configuration variable file if it is present
[ -r "$sysconfig" ] && . "$sysconfig"

[ -x $REPMGRD_BIN ] || exit 1

case "$REPMGRD_ENABLED" in
  [Yy]*)
    break
    ;;
  *)
    exit 0
    ;;
esac

if [ -z "${REPMGRD_OPTS}" ]; then
  echo "Not starting ${prog}, REPMGRD_OPTS not set in ${sysconfig}"
  exit 0
fi


# Check that networking is up.
[ "${NETWORKING}" = "no" ] && exit 6
start(){
  [ -x $REPMGRD_BIN ] || exit 5
  [ -f "${REPMGRD_CONF}" ] || exit 6
  echo -n "Starting $prog: "

  # Make sure startup-time log file is valid
  if [ ! -e "${REPMGRD_LOG}" -a ! -h "${REPMGRD_LOG}" ]; then
    touch "${REPMGRD_LOG}" || exit 1
    chown $REPMGRD_USER: "${REPMGRD_LOG}"
    chmod go-rwx "${REPMGRD_LOG}"
    [ -x /usr/bin/chcon ] && /usr/bin/chcon -u system_u -r object_r -t postgresql_log_t "${REPMGRD_LOG}" 2>/dev/null
  fi

  mkdir -p $(dirname $REPMGRD_PIDFILE)
  chown $REPMGRD_USER: $(dirname $REPMGRD_PIDFILE)

  ${REPMGRD_BIN} -f ${REPMGR_CONF} ${REPMGRD_OPTS} -p ${REPMGRD_PIDFILE} >> ${REPMGRD_LOG} 2>&1
  retval=$?
  sleep 2
  [ $retval -eq 0 ] && success
  echo
  return $retval
}

stop(){
  echo -n "Stopping $prog: "
  killproc -p $REPMGRD_PIDFILE $prog -TERM
  retval=$?
  echo
  return $retval
}

restart(){
  if rh_status_q; then
    stop
    start
  else
    start
  fi
}

reload(){
  echo -n "Reloading $prog: "
  kill -HUP $(cat $REPMGRD_PIDFILE)
  retval=$?
  echo
  return $retval
}

rh_status() {
  if [ -f $REPMGRD_PIDFILE ] && [ $(ps hp $(cat $REPMGRD_PIDFILE)|wc -l) -eq 1 ]; then
    pid=$(cat $REPMGRD_PIDFILE)
    echo "Process repmgrd exists (PID $pid)"
    return 0
  else
    return 1
  fi
}

rh_status_q() {
  rh_status >/dev/null 2>&1
}

case "$1" in
  start)
    rh_status_q && exit 0
    start
    ;;
  stop)
    rh_status_q || exit 0
    stop
    ;;
  restart)
    restart
    ;;
  reload|force-reload)
    rh_status_q || exit 7
    reload
    ;;
  condrestart|try-restart)
    rh_status_q || exit 0
    restart
    ;;
  status)
    status -p $REPMGRD_PIDFILE repmgr-9.4
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|reload|force-reload|condrestart|try-restart|status}"
    exit 2
esac

exit $?
