AC_INIT([repmgr],[5.4.1],[repmgr@googlegroups.com],[repmgr],[https://repmgr.org/])

AC_COPYRIGHT([Copyright (c) 2010-2021, EnterpriseDB Corporation])

AC_CONFIG_HEADERS([config.h])

AC_ARG_VAR([PG_CONFIG], [Location to find pg_config for target PostgreSQL (default PATH)])

AC_PROG_SED

if test -z "$PG_CONFIG"; then
  AC_PATH_PROG(PG_CONFIG, pg_config)
fi

if test -z "$PG_CONFIG"; then
   AC_MSG_ERROR([could not find pg_config, set PG_CONFIG or PATH])
fi

pgac_pg_config_version=$($PG_CONFIG --version 2>/dev/null)

major_version_num=$(echo "$pgac_pg_config_version"|
              $SED -e 's/^[[^0-9]]\+ \([[0-9]]\{1,2\}\).*$/\1/')

if test "$major_version_num" -lt '10'; then
    version_num=$(echo "$pgac_pg_config_version"|
                $SED -e 's/^[[^0-9]]\+ \([[0-9]]*\)\.\([[0-9]]*\)\([[a-zA-Z0-9.]]*\)$/\1.\2/')

    if test -z "$version_num"; then
        AC_MSG_ERROR([could not detect the PostgreSQL version, wrong or broken pg_config?])
    fi

    version_num_int=$(echo "$version_num"|
                    $SED -e 's/^\([[0-9]]*\)\.\([[0-9]]*\)$/\1\2/')

    if test "$version_num_int" -lt '94'; then
        AC_MSG_ERROR([repmgr is not compatible with detected PostgreSQL version: $version_num])
    fi
else
    version_num=$(echo "$pgac_pg_config_version"|
                $SED -e 's/^[[^0-9]]\+ \(.\+\)$/\1/')

    if test -z "$version_num"; then
        AC_MSG_ERROR([could not detect the PostgreSQL version, wrong or broken pg_config?])
    fi
fi

AC_MSG_NOTICE([building against PostgreSQL $version_num])

# add includedir to prerequisites, so tests for headers can succeed
CPPFLAGS="-I$($PG_CONFIG --includedir-server) $CFLAGS"

# check whether we're building inside the source tree.
if test "$srcdir" -ef '.' ; then
  vpath_build=no
else
  vpath_build=yes
fi
AC_SUBST(vpath_build)

AC_CHECK_PROG(HAVE_GNUSED,gnused,yes,no)
AC_CHECK_PROG(HAVE_GSED,gsed,yes,no)
AC_CHECK_PROG(HAVE_SED,sed,yes,no)
AC_CHECK_PROG(HAVE_FLEX,flex,yes,no)

if test "$HAVE_GNUSED" = yes; then
 SED=gnused
else
 if test "$HAVE_GSED" = yes; then
  SED=gsed
 else
  SED=sed
 fi
fi
AC_SUBST(SED)

AS_IF([test x"$HAVE_FLEX" != x"yes"], AC_MSG_ERROR([flex should be installed first]))

#Checking libraries
GENERIC_LIB_FAILED_MSG="library should be installed"

AC_CHECK_LIB(selinux, is_selinux_enabled, [],
     [AC_MSG_ERROR(['selinux' $GENERIC_LIB_FAILED_MSG])])

AC_CHECK_LIB(lz4, LZ4_compress_default, [],
     [AC_MSG_ERROR(['Z4' $GENERIC_LIB_FAILED_MSG])])

AC_CHECK_LIB(xslt, xsltCleanupGlobals, [],
     [AC_MSG_ERROR(['xslt' $GENERIC_LIB_FAILED_MSG])])

AC_CHECK_LIB(pam, pam_start, [],
     [AC_MSG_ERROR(['pam' $GENERIC_LIB_FAILED_MSG])])

AC_CHECK_LIB(gssapi_krb5, gss_init_sec_context, [],
     [AC_MSG_ERROR([gssapi_krb5 $GENERIC_LIB_FAILED_MSG])])

AC_CONFIG_FILES([Makefile])
AC_CONFIG_FILES([Makefile.global])
AC_OUTPUT

