#!/bin/sh
### BEGIN INIT INFO
# Provides:	     repmgrd
# Required-Start:    $local_fs $remote_fs $network $syslog postgresql
# Required-Stop:     $local_fs $remote_fs $network $syslog postgresql
# Should-Start:	     $syslog postgresql
# Default-Start:     2 3 4 5
# Default-Stop:	     0 1 6
# Short-Description: Start/stop repmgrd
# Description:       Enable repmgrd replication management and monitoring daemon for PostgreSQL
### END INIT INFO

set -e

DESC="PostgreSQL replication management and monitoring daemon"
NAME=repmgrd

REPMGRD_ENABLED=no
REPMGRD_OPTS=
REPMGRD_USER=postgres
REPMGRD_BIN=/usr/bin/repmgrd
REPMGRD_PIDFILE=/var/run/repmgrd.pid

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

test -x $REPMGRD_BIN || exit 0

case "$REPMGRD_ENABLED" in
    [Yy]*)
	break
	;;
    *)
	exit 0
	;;
esac

# Define LSB log_* functions.
. /lib/lsb/init-functions

if [ -z "$REPMGRD_OPTS" ]
then
    log_warning_msg "Not starting $NAME, REPMGRD_OPTS not set in /etc/default/$NAME"
    exit 0
fi

do_start()
{
	# Return
	#   0 if daemon has been started
	#   1 if daemon was already running
	#   other if daemon could not be started or a failure occured
	start-stop-daemon --start --quiet --background --chuid $REPMGRD_USER --make-pidfile --pidfile $REPMGRD_PIDFILE --exec $REPMGRD_BIN -- $REPMGRD_OPTS
}

do_stop()
{
	# Return
	#   0 if daemon has been stopped
	#   1 if daemon was already stopped
	#   other if daemon could not be stopped or a failure occurred
	start-stop-daemon --stop --quiet --retry=TERM/30/KILL/5 --pidfile $REPMGRD_PIDFILE
}

case "$1" in
  start)
	log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0) log_end_msg 0 ;;
		1) log_progress_msg "already started"
		   log_end_msg 0 ;;
		*) log_end_msg 1 ;;
	esac

	;;
  stop)
	log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0) log_end_msg 0 ;;
		1) log_progress_msg "already stopped"
		   log_end_msg 0 ;;
		*) log_end_msg 1 ;;
	esac

	;;
  restart|force-reload)
	$0 stop
	$0 start
	;;
  status)
	status_of_proc -p $REPMGRD_PIDFILE $REPMGRD_BIN $NAME && exit 0 || exit $?
	;;
  *)
	echo "Usage: $SCRIPTNAME {start|stop|restart|force-reload|status}" >&2
	exit 3
	;;
esac

exit 0
